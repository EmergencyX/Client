// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: explorer-server.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class ExplorerServer {

  #region Descriptor
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ExplorerServer() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChVleHBsb3Jlci1zZXJ2ZXIucHJvdG8iMgoMTG9naW5SZXF1ZXN0EhAKCHVz", 
          "ZXJuYW1lGAEgASgJEhAKCHBhc3N3b3JkGAIgASgJIjEKDUxvZ2luUmVzcG9u", 
          "c2USDwoHc3VjY2VzcxgBIAEoCBIPCgd1c2VyX2lkGAIgASgNMkIKGEVtZXJn", 
          "ZW5jeUV4cGxvcmVyU2VydmljZRImCgVMb2dpbhINLkxvZ2luUmVxdWVzdBoO", 
          "LkxvZ2luUmVzcG9uc2ViBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
          new pbr::GeneratedCodeInfo(typeof(global::LoginRequest), new[]{ "Username", "Password" }, null, null, null),
          new pbr::GeneratedCodeInfo(typeof(global::LoginResponse), new[]{ "Success", "UserId" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
  private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
  public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

  public static pbr::MessageDescriptor Descriptor {
    get { return global::ExplorerServer.Descriptor.MessageTypes[0]; }
  }

  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  public LoginRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  public LoginRequest(LoginRequest other) : this() {
    username_ = other.username_;
    password_ = other.password_;
  }

  public LoginRequest Clone() {
    return new LoginRequest(this);
  }

  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  public string Username {
    get { return username_; }
    set {
      username_ = pb::Preconditions.CheckNotNull(value, "value");
    }
  }

  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  public string Password {
    get { return password_; }
    set {
      password_ = pb::Preconditions.CheckNotNull(value, "value");
    }
  }

  public override bool Equals(object other) {
    return Equals(other as LoginRequest);
  }

  public bool Equals(LoginRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    if (Password != other.Password) return false;
    return true;
  }

  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    return hash;
  }

  public override string ToString() {
    return pb::JsonFormatter.Default.Format(this);
  }

  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
  }

  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    return size;
  }

  public void MergeFrom(LoginRequest other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
  }

  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
  private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
  public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

  public static pbr::MessageDescriptor Descriptor {
    get { return global::ExplorerServer.Descriptor.MessageTypes[1]; }
  }

  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  public LoginResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  public LoginResponse(LoginResponse other) : this() {
    success_ = other.success_;
    userId_ = other.userId_;
  }

  public LoginResponse Clone() {
    return new LoginResponse(this);
  }

  public const int SuccessFieldNumber = 1;
  private bool success_;
  public bool Success {
    get { return success_; }
    set {
      success_ = value;
    }
  }

  public const int UserIdFieldNumber = 2;
  private uint userId_;
  public uint UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  public override bool Equals(object other) {
    return Equals(other as LoginResponse);
  }

  public bool Equals(LoginResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Success != other.Success) return false;
    if (UserId != other.UserId) return false;
    return true;
  }

  public override int GetHashCode() {
    int hash = 1;
    if (Success != false) hash ^= Success.GetHashCode();
    if (UserId != 0) hash ^= UserId.GetHashCode();
    return hash;
  }

  public override string ToString() {
    return pb::JsonFormatter.Default.Format(this);
  }

  public void WriteTo(pb::CodedOutputStream output) {
    if (Success != false) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(UserId);
    }
  }

  public int CalculateSize() {
    int size = 0;
    if (Success != false) {
      size += 1 + 1;
    }
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
    }
    return size;
  }

  public void MergeFrom(LoginResponse other) {
    if (other == null) {
      return;
    }
    if (other.Success != false) {
      Success = other.Success;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
  }

  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
        case 16: {
          UserId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
